// Code generated by go-swagger; DO NOT EDIT.

package crypto_checkout

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/crypto-checkout/server/models"
)

// PostCheckoutOKCode is the HTTP code returned for type PostCheckoutOK
const PostCheckoutOKCode int = 200

/*PostCheckoutOK Success

swagger:response postCheckoutOK
*/
type PostCheckoutOK struct {

	/*
	  In: Body
	*/
	Payload *models.Checkout `json:"body,omitempty"`
}

// NewPostCheckoutOK creates PostCheckoutOK with default headers values
func NewPostCheckoutOK() *PostCheckoutOK {

	return &PostCheckoutOK{}
}

// WithPayload adds the payload to the post checkout o k response
func (o *PostCheckoutOK) WithPayload(payload *models.Checkout) *PostCheckoutOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post checkout o k response
func (o *PostCheckoutOK) SetPayload(payload *models.Checkout) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCheckoutOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCheckoutInternalServerErrorCode is the HTTP code returned for type PostCheckoutInternalServerError
const PostCheckoutInternalServerErrorCode int = 500

/*PostCheckoutInternalServerError Internal server error

swagger:response postCheckoutInternalServerError
*/
type PostCheckoutInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCheckoutInternalServerError creates PostCheckoutInternalServerError with default headers values
func NewPostCheckoutInternalServerError() *PostCheckoutInternalServerError {

	return &PostCheckoutInternalServerError{}
}

// WithPayload adds the payload to the post checkout internal server error response
func (o *PostCheckoutInternalServerError) WithPayload(payload *models.Error) *PostCheckoutInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post checkout internal server error response
func (o *PostCheckoutInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCheckoutInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
