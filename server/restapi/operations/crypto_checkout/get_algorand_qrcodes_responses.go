// Code generated by go-swagger; DO NOT EDIT.

package crypto_checkout

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/crypto-checkout/server/models"
)

// GetAlgorandQrcodesOKCode is the HTTP code returned for type GetAlgorandQrcodesOK
const GetAlgorandQrcodesOKCode int = 200

/*GetAlgorandQrcodesOK Success

swagger:response getAlgorandQrcodesOK
*/
type GetAlgorandQrcodesOK struct {

	/*
	  In: Body
	*/
	Payload *models.CheckoutQRCode `json:"body,omitempty"`
}

// NewGetAlgorandQrcodesOK creates GetAlgorandQrcodesOK with default headers values
func NewGetAlgorandQrcodesOK() *GetAlgorandQrcodesOK {

	return &GetAlgorandQrcodesOK{}
}

// WithPayload adds the payload to the get algorand qrcodes o k response
func (o *GetAlgorandQrcodesOK) WithPayload(payload *models.CheckoutQRCode) *GetAlgorandQrcodesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get algorand qrcodes o k response
func (o *GetAlgorandQrcodesOK) SetPayload(payload *models.CheckoutQRCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlgorandQrcodesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAlgorandQrcodesInternalServerErrorCode is the HTTP code returned for type GetAlgorandQrcodesInternalServerError
const GetAlgorandQrcodesInternalServerErrorCode int = 500

/*GetAlgorandQrcodesInternalServerError Internal server error

swagger:response getAlgorandQrcodesInternalServerError
*/
type GetAlgorandQrcodesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAlgorandQrcodesInternalServerError creates GetAlgorandQrcodesInternalServerError with default headers values
func NewGetAlgorandQrcodesInternalServerError() *GetAlgorandQrcodesInternalServerError {

	return &GetAlgorandQrcodesInternalServerError{}
}

// WithPayload adds the payload to the get algorand qrcodes internal server error response
func (o *GetAlgorandQrcodesInternalServerError) WithPayload(payload *models.Error) *GetAlgorandQrcodesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get algorand qrcodes internal server error response
func (o *GetAlgorandQrcodesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlgorandQrcodesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
